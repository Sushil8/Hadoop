=============MYSQL================
create table attributes(Acceleration int, Aggression int, Agility int, Balance int, Ball_control int, Composure int, Crossing int, Curve int, Dribbling int, Finishing int, Free_kick int, GK_diving int, GK_handling int, GK_kicking int, GK_positioning	int, GK_reflexes int, Heading_accuracy int, ID int, Interceptions int, Jumping int, Long_passing int, Long_shots int, Marking int, Penalties int, Positioning int, Reactions int,	Short_passing int, Shot_power int, Sliding_tackle int, Sprint_speed int, Stamina int, Standing_tackle int, Strength int, Visions int, Volleys int, PRIMARY KEY (ID));

CREATE TABLE positions (cam int, cb int, cdm int, cf int, cm int, ID int, lam int, lb int, lcb int, lcm int, ldm int, lf int, lm int, ls int, lw int, lwd int, preferred text, ram int, rb int, rcb int , rcm int, rdm int, rf int , rm int , rs int, rw int, rwb int, st int, PRIMARY KEY (ID))

CREATE TABLE personal (ID int, Name varchar(255), Age int, Nationality varchar(255), Overall int, Potential int, Club varchar(255) , Value int, Wage int , Special int, PRIMARY KEY(ID))

load data local infile '/home/hduser/Public/attributes.csv' into table attributes fields terminated by ',' lines terminated by '\n';

create table personal(ID int,	Name varchar(255), Age int, Nationality varchar(255), Overall int, Potential int, Club varchar(255), Value int,	Wage int, Special int);

load data local infile '/home/hduser/Public/personal.csv' into table personal fields terminated by ',' lines terminated by '\n';

========sqoop================
sqoop import --connect jdbc:mysql://127.0.0.1/Test --username root --password march2017 --table attributes --hive-import --create-hive-table --hive-table attributes

sqoop import --connect jdbc:mysql://127.0.0.1/Test --username root --password march2017 --table positions --hive-import --create-hive-table --hive-table positions

sqoop import --connect jdbc:mysql://127.0.0.1/Test --username root --password march2017 --table personal --hive-import --create-hive-table --hive-table personal

===========HIVE===================

Query 2
hive -e 'set hive.cli.print.header=true;select id,name,age,value,wage,overall from personal where exists (select * from attributes where acceleration>80 AND dribbling>80 AND ball_control>80 AND personal.id=attributes.id) AND age>28 ORDER BY age;' | sed 's/[\t]/,/g' > Hive_output1.csv

Query 1
hive -e 'set hive.cli.print.header=true;select personal.id,personal.name,personal.club,positions.st,positions.lw,positions.rw,positions.cm,positions.cb,personal.overall from personal INNER JOIN positions ON personal.id=positions.id where (positions.st>87 OR positions.lw>87 OR positions.rw>87 OR positions.cm>85 OR positions.cb>85 OR positions.lb>85 OR positions.rb>85);' | sed 's/[\t]/,/g' > Hive_output2.csv

===============Cassandra================:
cqlsh> create keyspace football with replication = {'class':'SimpleStrategy','replication_factor':1} and durable_writres=true;
use football;

cqlsh:football> CREATE TABLE personal (ID text, Name text, Age text, Nationality text, Overall text, Potential text, Club text , Value text, Wage text , Special text, PRIMARY KEY(ID)) ;

cqlsh:football> create table attributes(Acceleration int, Aggression int, Agility int, Balance int, Ball_control int, Composure int, Crossing int, Curve int, Dribbling int, Finishing int, Free_kick int, GK_diving int, GK_handling int, GK_kicking int, GK_positioning int, GK_reflexes int, Heading_accuracy int, ID int, Interceptions int, Jumping int, Long_passing int, Long_shots int, Marking int, Penalties int, Positioning int, Reactions int,Short_passing int, Shot_power int, Sliding_tackle int, Sprint_speed int, Stamina int, Standing_tackle int, Strength int, Visions int, Volleys int, PRIMARY KEY (ID));

cqlsh:football> CREATE TABLE positions (cam int, cb int, cdm int, cf int, cm int, ID int, lam int, lb int, lcb int, lcm int, ldm int, lf int, lm int, ls int, lw int, lwd int, preferred text, ram int, rb int, rcb int , rcm int, rdm int, rf int , rm int , rs int, rw int, rwb int, st int, PRIMARY KEY (ID));

========================================
Query 4-
attributes = LOAD 'attributes.csv' USING PigStorage(',') AS(acceleration:int, Aggression:int, Agility:int, Balance:int, Ball_control:int, Composure:int, Crossing:int, Curve:int, Dribbling:int, Finishing:int, Free_kick:int, GK_diving:int, GK_handling:int, GK_kicking:int, GK_positioning:int, GK_reflexes:int, Heading_accuracy:int, ID:int, Interceptions:int, Jumping:int, Long_passing:int, Long_shots:int, Marking:int, Penalties:int, Positioning:int, Reactions:int, Short_passing:int, Shot_power:int, Sliding_tackle:int, Sprint_speed:int, Stamina:int, Standing_tackle:int, Strength:int, Visions:int, Volleys:int);
--DUMP attributes;

positions = LOAD 'positions.csv' USING PigStorage(',') AS(cam:int, cb:int, cdm:int, cf:int, cm:int, ID:int, lam:int, lb:int, lcb:int, lcm:int, ldm:int, lf:int, lm:int, ls:int, lw:int, lwd:int, preferred:chararray, ram:int, rb:int, rcb:int , rcm:int, rdm:int, rf:int , rm:int , rs:int, rw:int, rwb:int, st:int);
--DUMP positions;

personal = LOAD 'personal.csv' USING PigStorage(',') AS(ID:int, Name:chararray, Age:int, Nationality:chararray, Overall:int, Potential:int, Club:chararray , Value:int, Wage:int , Special:int);
--DUMP personal;

nameloo = FOREACH personal GENERATE ID,Name,Age,Overall,Club;

top_player = FILTER nameloo by Overall>85;
--dump top_player;

attr_loo = FOREACH attributes GENERATE ID,acceleration,Balance, Dribbling, Strength, Finishing;
playerdata = JOIN top_player by ID, attr_loo by ID;

club_group = GROUP playerdata by Club;
dump club_group;
STORE club_group into 'Pigout1' USING PigStorage(',');

============================================
Query 3-

attributes = LOAD 'attributes.csv' USING PigStorage(',') AS(acceleration:int, Aggression:int, Agility:int, Balance:int, Ball_control:int, Composure:int, Crossing:int, Curve:int, Dribbling:int, Finishing:int, Free_kick:int, GK_diving:int, GK_handling:int, GK_kicking:int, GK_positioning:int, GK_reflexes:int, Heading_accuracy:int, ID:int, Interceptions:int, Jumping:int, Long_passing:int, Long_shots:int, Marking:int, Penalties:int, Positioning:int, Reactions:int, Short_passing:int, Shot_power:int, Sliding_tackle:int, Sprint_speed:int, Stamina:int, Standing_tackle:int, Strength:int, Visions:int, Volleys:int);
--DUMP attributes;

positions = LOAD 'positions.csv' USING PigStorage(',') AS(cam:int, cb:int, cdm:int, cf:int, cm:int, ID:int, lam:int, lb:int, lcb:int, lcm:int, ldm:int, lf:int, lm:int, ls:int, lw:int, lwd:int, preferred:chararray, ram:int, rb:int, rcb:int , rcm:int, rdm:int, rf:int , rm:int , rs:int, rw:int, rwb:int, st:int);
--DUMP positions;

personal = LOAD 'personal.csv' USING PigStorage(',') AS(ID:int, Name:chararray, Age:int, Nationality:chararray, Overall:int, Potential:int, Club:chararray , Value:int, Wage:int , Special:int);
--DUMP personal;


filter_att = FILTER attributes BY aggression>80 AND agility>80;
DUMP filter_att;
player_att = FOREACH attributes GENERATE ID, aggression, agility, visions;


